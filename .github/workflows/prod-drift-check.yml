---
name: Prod Drift Check 

# on:
#   schedule:
#     - cron: '*/5 * * * *'

on:
  push:
    branches:
      - main

env:
  TF_CLOUD_ORGANIZATION: ${{ vars.ORG }}
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

jobs:
  terraform-cloud-drift-check:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Upload Terraform configuration to HCP
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.2
        id: upload
        with:
          workspace: prod
          directory: prod 

      - name: Create Terraform create run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.2
        id: create-run
        with:
          workspace: prod
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          plan_only: true

      - name: Create Terraform plan output 
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.3.2
        id: plan-output
        with:
          plan: ${{ steps.create-run.outputs.plan_id }}

      
      - name: Check if plan matches expected values
        id: check-plan
        run: |
          plan_output="${{ steps.plan-output.outputs.plan }}"

          add=$(echo "$plan_output" | jq -r '.add')
          change=$(echo "$plan_output" | jq -r '.change')
          destroy=$(echo "$plan_output" | jq -r '.destroy')
          plan_status=$(echo "$plan_output" | jq -r '.plan_status')
          status=$(echo "$plan_output" | jq -r '.status')

          if [[ "$add" == "0" && "$change" == "0" && "$destroy" == "0" && "$plan_status" == "finished" && "$status" == "Success" ]]; then
            echo "Plan is valid. No drift detected."
          else
            echo "Drift detected or invalid plan. Values: add=$add, change=$change, destroy=$destroy, plan_status=$plan_status, status=$status"
            exit 1
          fi
