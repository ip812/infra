---
name: K8s Apply

on:
  push:
    branches:
      - main
    paths:
      - k8s/**
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run kubectl apply against prod cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          instance_id=$(aws ec2 describe-instances \
            --filters "Name=instance-state-name,Values=running" \
            --query "Reservations[].Instances[].InstanceId" \
            --output text | xargs | cut -d ' ' -f1)
          echo "Instance ID: ${instance_id}"

          cmd="git -C /infra fetch origin main && git -C /infra reset --hard origin/main"
          touch pull_result.txt
          ./scripts/aws-ssm-exec-cmd-on-ec2.sh "${cmd}" "${instance_id}" pull_result.txt
          cat pull_result.txt

          cmd="helm install --namespace ip812 --wait postgres ./infra/k8s/charts/postgres && helm install --namespace ip812 --wait go-template ./infra/k8s/charts/go-template && helm install --namespace ip812 --wait cloudflare-tunnel ./infra/k8s/charts/cloudflare-tunnel"
          touch apply_result.txt
          ./scripts/aws-ssm-exec-cmd-on-ec2.sh "${cmd}" "${instance_id}" apply_result.txt
          cat apply_result.txt
